#Population model Simulator
SimPop<-function(seed=1,                         #seed to start random number generation for reproducibility
fage=0,                         #first age of population
lage=15,                        #last age/plus group of population
fyear=1,                        #first year of population
lyear=100,                      #last year of population
Linf=25,                        #asymptotic size
a3=0.5,                         #SS-like parameterization of growth, a3 parameter
L1=10,                          #ditto^ L1 param
BK=0.4,                         #brody growth coefficient
Weight_scaling=1.7e-5,          #Weight-length a
Weight_allometry=2.9,           #Weight-length b
Mref=0.4,                       #Constant, age-invariant natural mortality parameter
Mat_50=15.9,                    #Mat param1, Age at which 50% maturity occurs
Mat_slope=-0.9,                 #Mat param2, Slope for logistic function of maturity
Sel_50=15.9,                    #Sel param1, Age at which 50% selectivity occurs
Sel_slope=3.3,                  #Sel param2, Slope for logistic function of selectivity
R0=exp(16),                     #Unfished recruitment
h=0.59,                         #Steepness
sd_rec=0.73,                    #Recruitment SD
const_F=FALSE,                  #Set constant fishing mortality??
fint=0.25,                      #fully-selected fishing mortality to set each year if fishing mortality is constant
fhigh=0.25,                     #F high for fishing mortality ramp if const_F is false
flow=0.25,                      #F low for fishing mortality ramp if const_F is false
stochastic=TRUE){               #Stochastic recruitment? If false then model is deterministic
set.seed(seed)
#Length at age
Lmin<-0
b<-(L1-Lmin)/a3
Laa<-Lmin+b*0
Laa<-NA
Laa[1]<-Lmin+b*0
Laa[2:lage]<-Linf+(L1-Linf)*exp(-BK*((1:(lage-1))-a3))
Laa[lage+1]<-Linf
Laa[1]<-uniroot(f=function(x) x+(x-Linf)*(exp(-BK)-1)-Laa[2], interval=c(0.01,100))$root
#Weight at age
Waa<-Weight_scaling*Laa^Weight_allometry
#Natural mortality at age
#Maa<-Mref*(Laa/(Linf*0.75))^-1     #If you'd like to use lorenzen M
Maa<-rep(Mref,length(fage:lage))    #Constant M
#Maturity
Mat<-1/(1+exp(Mat_slope*(Laa-Mat_50)))
#Fishery Selectivity
Sel<-1/(1+exp(-log(19)*(Laa-Sel_50)/Sel_slope))
#Fishing intensity, starts in year 25
k_int<-0.15
mid_int<-20
F_int<-NA
if (const_F==TRUE){
F_int[fyear:lyear]<-fint
} else if (const_F==FALSE){
F_int[fyear:25]<-0
F_int[26:85]<-fhigh/length(26:85)*(1:length(26:85))
F_int[86:lyear]<-F_int[85]+(flow-fhigh)/length(86:lyear)*(1:length(86:lyear))
}
#Now Pop Stuff
lxo<-c(1,cumprod(exp(-Maa[1:lage])))   #survivorship
lxo[lage+1]<-lxo[lage+1]/(1-exp(-Maa[lage+1]))   #plus group survivorship
N0aa<-R0*lxo
SSB0<-sum(N0aa*Mat*Waa)  #Unfished SSB calc
#Population Simulation
Faa<-Zaa<-matrix(NA, nrow=lyear, ncol=lage+1)
Naa<-matrix(NA, nrow=lyear+1, ncol=lage+1)
Naa[1,]<-N0aa
SSB<-sum(Naa[1,]*Mat*Waa)
lrecdevs<-0
for(i in fyear:lyear){
Faa[i,]<-F_int[i]*Sel
Zaa[i,]<-Maa+Faa[i,]
for(j in 1:lage){
Naa[i+1,j+1]<-Naa[i,j]*exp(-Zaa[i,j])
}
Naa[i+1,lage+1]<-Naa[i+1,lage+1]+Naa[i,lage+1]*exp(-Zaa[i,lage+1]) #plus group
SSB[i+1] <- sum(Naa[i+1,]*Mat*Waa, na.rm=TRUE)
if (stochastic==TRUE){
lrecdevs[i+1]<-rnorm(n=1,mean=0, sd=sd_rec)
Naa[i+1,1] <- (4*h*R0*SSB[i+1])/(SSB0*(1-h)+SSB[i+1]*(5*h-1))*exp(lrecdevs[i+1]-0.5*sd_rec^2)
} else {
Naa[i+1,1] <- (4*h*R0*SSB[i+1])/(SSB0*(1-h)+SSB[i+1]*(5*h-1))
}
}
Caa<-Faa/Zaa*Naa[1:lyear,]*(1-exp(-Zaa))
return(list(fage=fage,lage=lage,seed=seed,fyear=fyear,lyear=lyear,Linf=Linf,a3=a3,L1=L1,BK=BK,Weight_scaling=Weight_scaling,Weight_allometry=Weight_allometry,Mref=Mref,
Mat_50=Mat_50,Mat_slope=Mat_slope,Sel_50=Sel_50,Sel_slope=Sel_slope,R0=R0,h=h,sd_rec=sd_rec,fint=fint,fhigh=fhigh,flow=flow,stochastic=stochastic,
lrecdevs=lrecdevs,
Laa=Laa,
Waa=Waa,
Mat=Mat,
F_int=F_int,
lxo=lxo,
Naa=Naa,
Caa=Caa,
SSB=SSB,
SSB0=SSB0,
N0aa=N0aa,
Maa=Maa,
Sel=Sel,
Faa=Faa,
Zaa=Zaa))
}
#Data simulator, function which simulates data from a population model
Get_Data<-function(OM=NA,              #Operating model from which to model
dat_seed=1,         #seed to start random number generation for reproducibility
fyear_dat=26,       #first year that has data
lyear_dat=100,      #last year with data
sd_catch=0.05,      #SD of catch data
#Composition sample size in each year (vector of length(fyear:lyear)). If zero then no comp data for that year
N_Comp=c(rep(0,25),30,rep(0,9),40,rep(0,9),50,rep(0,4),60,rep(0,4),70,rep(0,4),80,rep(0,4),90,rep(0,4),rep(100,30)),
q_index=0.0001,     #Catchability of fishery index
sd_index=0.25,      #standard deviation of fishery index
#TRUE Ageing error matrix, if identity (diag), then no ageing error. This needs to have dimension length(fage:lage)*length(fage:lage)
AE_mat=diag(15))    #Given your true age i (row), this matrix defines the probability that you will be classified age j (column)
{
set.seed(dat_seed)
#Getting Data
Obs_Catch<-Obs_Index<-NA
Obs_Catch_Comp<-Obs_Catch_Comp_noAE<-matrix(0,nrow=length(fyear_dat:lyear_dat),ncol=length(OM$fage:OM$lage))
Obs_Catch_Comp_wiY<-array(0,dim=c(length(fyear_dat:lyear_dat),length(OM$fage:OM$lage),length(OM$fage:OM$lage)))
for (d in fyear_dat:lyear_dat){
Obs_Catch[d-(fyear_dat-1)]<-rlnorm(1, meanlog=log(sum(OM$Caa[d,]*OM$Waa)), sdlog=sd_catch)
Obs_Index[d-(fyear_dat-1)]<-rlnorm(1, meanlog=log(sum(OM$Naa[d,]*((1-exp(-OM$Zaa[d,]))/OM$Zaa[d,])*OM$Sel*OM$Waa)*q_index), sdlog=sd_index)
Obs_Catch_Comp_noAE[d-(fyear_dat-1),]<-rmultinom(n=1,size=N_Comp[d], prob=OM$Caa[d,])
# *I think* this line code would be equivalent to the more kludgy and inefficient code below, but we won't run into efficiency issues so commented out in favor of double sampler
#    Obs_Catch_Comp[d-(fyear_dat-1),]<-rmultinom(n=1,size=N_Comp[d], prob=(OM$Caa%*%AE_mat)[d,])
#Getting observed data with Ageing error
#Another sampler is needed to get data in integers, as opposed to commented out line below
for (a in 1:length(OM$fage:OM$lage)){
if(Obs_Catch_Comp_noAE[d-(fyear_dat-1),a]>0){
Obs_Catch_Comp_wiY[d-(fyear_dat-1),a,]<-rmultinom(1,size=Obs_Catch_Comp_noAE[d-(fyear_dat-1),a],prob=AE_mat[a,])
}
}
Obs_Catch_Comp[d-(fyear_dat-1),]<-colSums(Obs_Catch_Comp_wiY[d-(fyear_dat-1),,])
}
#This would be *expected* data with ageing error but in decimals.
#  Obs_Catch_Comp<-Obs_Catch_Comp_noAE%*%AE_mat  #Getting observed data with Ageing error
return(list(OM=OM,dat_seed=dat_seed,sd_catch=sd_catch,N_Comp=N_Comp,q_index=q_index,sd_index=sd_index,fyear_dat=fyear_dat,lyear_dat=lyear_dat,
Obs_Catch=Obs_Catch,
Obs_Catch_CompnoAE=Obs_Catch_Comp_noAE,
Obs_Catch_Comp=Obs_Catch_Comp,
Obs_Index=Obs_Index))
}
#Example for Flatfish-like life-history
#For Flatfish, fmsy is 0.27, MSY is 5240.563 (*0.85= 4454.479), and fhigh which reaches 0.85*MSY is 0.5425, flow is 0.1259
Nsim<-100
Flatfish_runs<-list()
for (s in 1:Nsim){
Flatfish_runs[[s]]<-SimPop(seed=s,
fage=0,
lage=15, #(Sedar 43, 2015)  p. 10
fyear=1,
lyear=100,
Linf=58.97, #(Sedar 43, 2015) p. 64
a3=0.5,
L1=28.3, #(Sedar 43, 2015) p. 64
BK=0.14, #(Sedar 43, 2015) p. 64
Weight_scaling=2.16e-5, #(Sedar 43, 2015) p. 64
Weight_allometry=3.007, #(Sedar 43, 2015) p. 64
Mref=0.28, #(Sedar 43, 2015) p. 32
Mat_50=31.0, #(Sedar 43, 2015) p. 64
Mat_slope=-0.065, #(Sedar 43, 2015) p. 64
Sel_50=28.9, #need to update!!!! maybe average across all fleets
Sel_slope=7, #need to update!!!! maybe average across all fleets
R0=exp(9.7608), #(Sedar 43, 2015) p. 64
h=0.4593, #(Sedar 43, 2015) p. 64
sd_rec=0.3582, #(Sedar 43, 2015) p. 64
const_F=FALSE,
fint=0.25, #need to update!!!!
fhigh=0.5425,#need to update!!!!
flow=0.1259,  #need to update!!!!
stochastic=TRUE)
}
#Looking at some plots of population
plot(1:101,Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0, ylim=c(0,2.75), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish", type="l", col="grey50")
Flatfish_Depl<-matrix(NA, nrow=Nsim,ncol=101)
Flatfish_Depl[1,]<-Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0
for(s in 2:Nsim){
Flatfish_Depl[s,]<-Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0
lines(1:101,Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0, col="grey50")
}
#Ok looking at Inner 75% and inner 95% of simulations
plot(1:101,apply(Flatfish_Depl,2,quantile,probs=0.975), type="l", lty=2, ylim=c(0,2), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish")
lines(1:101,apply(Flatfish_Depl,2,median),lty=1)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.025),lty=2)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.875),lty=3)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.125),lty=3)
legend("top", c("Median","Inner 75%","Inner 95%"), lwd=1, lty=c(1,3,2))
#Example for Flatfish-like life-history
#For Flatfish, fmsy is 0.27, MSY is 5240.563 (*0.85= 4454.479), and fhigh which reaches 0.85*MSY is 0.5425, flow is 0.1259
Nsim<-100
Flatfish_runs<-list()
for (s in 1:Nsim){
Flatfish_runs[[s]]<-SimPop(seed=s,
fage=0,
lage=15, #(Sedar 43, 2015)  p. 10
fyear=1,
lyear=100,
Linf=58.97, #(Sedar 43, 2015) p. 64
a3=0.5,
L1=28.3, #(Sedar 43, 2015) p. 64
BK=0.14, #(Sedar 43, 2015) p. 64
Weight_scaling=2.16e-5, #(Sedar 43, 2015) p. 64
Weight_allometry=3.007, #(Sedar 43, 2015) p. 64
Mref=0.28, #(Sedar 43, 2015) p. 32
Mat_50=31.0, #(Sedar 43, 2015) p. 64
Mat_slope=-0.065, #(Sedar 43, 2015) p. 64
Sel_50=28.9, #need to update!!!! maybe average across all fleets
Sel_slope=7, #need to update!!!! maybe average across all fleets
R0=exp(9.7608), #(Sedar 43, 2015) p. 64
h=0.4593, #(Sedar 43, 2015) p. 64
sd_rec=0.3582, #(Sedar 43, 2015) p. 64
const_F=FALSE,
fint=0.25, #need to update!!!!
fhigh=0.3,#need to update!!!!
flow=0.1259,  #need to update!!!!
stochastic=TRUE)
}
#Looking at some plots of population
plot(1:101,Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0, ylim=c(0,2.75), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish", type="l", col="grey50")
Flatfish_Depl<-matrix(NA, nrow=Nsim,ncol=101)
Flatfish_Depl[1,]<-Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0
for(s in 2:Nsim){
Flatfish_Depl[s,]<-Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0
lines(1:101,Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0, col="grey50")
}
#Ok looking at Inner 75% and inner 95% of simulations
plot(1:101,apply(Flatfish_Depl,2,quantile,probs=0.975), type="l", lty=2, ylim=c(0,2), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish")
lines(1:101,apply(Flatfish_Depl,2,median),lty=1)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.025),lty=2)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.875),lty=3)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.125),lty=3)
legend("top", c("Median","Inner 75%","Inner 95%"), lwd=1, lty=c(1,3,2))
#Example for Flatfish-like life-history
#For Flatfish, fmsy is 0.27, MSY is 5240.563 (*0.85= 4454.479), and fhigh which reaches 0.85*MSY is 0.5425, flow is 0.1259
Nsim<-100
Flatfish_runs<-list()
for (s in 1:Nsim){
Flatfish_runs[[s]]<-SimPop(seed=s,
fage=0,
lage=15, #(Sedar 43, 2015)  p. 10
fyear=1,
lyear=100,
Linf=58.97, #(Sedar 43, 2015) p. 64
a3=0.5,
L1=28.3, #(Sedar 43, 2015) p. 64
BK=0.14, #(Sedar 43, 2015) p. 64
Weight_scaling=2.16e-5, #(Sedar 43, 2015) p. 64
Weight_allometry=3.007, #(Sedar 43, 2015) p. 64
Mref=0.28, #(Sedar 43, 2015) p. 32
Mat_50=31.0, #(Sedar 43, 2015) p. 64
Mat_slope=-0.065, #(Sedar 43, 2015) p. 64
Sel_50=28.9, #need to update!!!! maybe average across all fleets
Sel_slope=7, #need to update!!!! maybe average across all fleets
R0=exp(9.7608), #(Sedar 43, 2015) p. 64
h=0.4593, #(Sedar 43, 2015) p. 64
sd_rec=0.3582, #(Sedar 43, 2015) p. 64
const_F=FALSE,
fint=0.2, #need to update!!!!
fhigh=0.5425,#need to update!!!!
flow=0.1259,  #need to update!!!!
stochastic=TRUE)
}
#Looking at some plots of population
plot(1:101,Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0, ylim=c(0,2.75), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish", type="l", col="grey50")
Flatfish_Depl<-matrix(NA, nrow=Nsim,ncol=101)
Flatfish_Depl[1,]<-Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0
for(s in 2:Nsim){
Flatfish_Depl[s,]<-Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0
lines(1:101,Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0, col="grey50")
}
#Ok looking at Inner 75% and inner 95% of simulations
plot(1:101,apply(Flatfish_Depl,2,quantile,probs=0.975), type="l", lty=2, ylim=c(0,2), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish")
lines(1:101,apply(Flatfish_Depl,2,median),lty=1)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.025),lty=2)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.875),lty=3)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.125),lty=3)
legend("top", c("Median","Inner 75%","Inner 95%"), lwd=1, lty=c(1,3,2))
#Example for Flatfish-like life-history
#For Flatfish, fmsy is 0.27, MSY is 5240.563 (*0.85= 4454.479), and fhigh which reaches 0.85*MSY is 0.5425, flow is 0.1259
Nsim<-100
Flatfish_runs<-list()
for (s in 1:Nsim){
Flatfish_runs[[s]]<-SimPop(seed=s,
fage=0,
lage=15, #(Sedar 43, 2015)  p. 10
fyear=1,
lyear=100,
Linf=58.97, #(Sedar 43, 2015) p. 64
a3=0.5,
L1=8.3, #(Sedar 43, 2015) p. 64
BK=0.14, #(Sedar 43, 2015) p. 64
Weight_scaling=2.16e-5, #(Sedar 43, 2015) p. 64
Weight_allometry=3.007, #(Sedar 43, 2015) p. 64
Mref=0.28, #(Sedar 43, 2015) p. 32
Mat_50=31.0, #(Sedar 43, 2015) p. 64
Mat_slope=-0.065, #(Sedar 43, 2015) p. 64
Sel_50=28.9, #need to update!!!! maybe average across all fleets
Sel_slope=7, #need to update!!!! maybe average across all fleets
R0=exp(9.7608), #(Sedar 43, 2015) p. 64
h=0.4593, #(Sedar 43, 2015) p. 64
sd_rec=0.3582, #(Sedar 43, 2015) p. 64
const_F=FALSE,
fint=0.2, #need to update!!!!
fhigh=0.5425,#need to update!!!!
flow=0.1259,  #need to update!!!!
stochastic=TRUE)
}
#Looking at some plots of population
plot(1:101,Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0, ylim=c(0,2.75), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish", type="l", col="grey50")
Flatfish_Depl<-matrix(NA, nrow=Nsim,ncol=101)
Flatfish_Depl[1,]<-Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0
for(s in 2:Nsim){
Flatfish_Depl[s,]<-Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0
lines(1:101,Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0, col="grey50")
}
#Ok looking at Inner 75% and inner 95% of simulations
plot(1:101,apply(Flatfish_Depl,2,quantile,probs=0.975), type="l", lty=2, ylim=c(0,2), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish")
lines(1:101,apply(Flatfish_Depl,2,median),lty=1)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.025),lty=2)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.875),lty=3)
#Example for Flatfish-like life-history
#For Flatfish, fmsy is 0.27, MSY is 5240.563 (*0.85= 4454.479), and fhigh which reaches 0.85*MSY is 0.5425, flow is 0.1259
Nsim<-100
Flatfish_runs<-list()
for (s in 1:Nsim){
Flatfish_runs[[s]]<-SimPop(seed=s,
fage=0,
lage=15, #(Sedar 43, 2015)  p. 10
fyear=1,
lyear=100,
Linf=58.97, #(Sedar 43, 2015) p. 64
a3=0.5,
L1=28.3, #(Sedar 43, 2015) p. 64
BK=0.14, #(Sedar 43, 2015) p. 64
Weight_scaling=2.16e-5, #(Sedar 43, 2015) p. 64
Weight_allometry=3.007, #(Sedar 43, 2015) p. 64
Mref=0.58, #(Sedar 43, 2015) p. 32
Mat_50=31.0, #(Sedar 43, 2015) p. 64
Mat_slope=-0.065, #(Sedar 43, 2015) p. 64
Sel_50=28.9, #need to update!!!! maybe average across all fleets
Sel_slope=7, #need to update!!!! maybe average across all fleets
R0=exp(9.7608), #(Sedar 43, 2015) p. 64
h=0.4593, #(Sedar 43, 2015) p. 64
sd_rec=0.3582, #(Sedar 43, 2015) p. 64
const_F=FALSE,
fint=0.2, #need to update!!!!
fhigh=0.5425,#need to update!!!!
flow=0.1259,  #need to update!!!!
stochastic=TRUE)
}
#Looking at some plots of population
plot(1:101,Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0, ylim=c(0,2.75), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish", type="l", col="grey50")
Flatfish_Depl<-matrix(NA, nrow=Nsim,ncol=101)
Flatfish_Depl[1,]<-Flatfish_runs[[1]]$SSB/Flatfish_runs[[1]]$SSB0
for(s in 2:Nsim){
Flatfish_Depl[s,]<-Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0
lines(1:101,Flatfish_runs[[s]]$SSB/Flatfish_runs[[s]]$SSB0, col="grey50")
}
#Ok looking at Inner 75% and inner 95% of simulations
plot(1:101,apply(Flatfish_Depl,2,quantile,probs=0.975), type="l", lty=2, ylim=c(0,2), las=1, xlab="Year", ylab="SSB/SSB0", main="Flatfish")
lines(1:101,apply(Flatfish_Depl,2,median),lty=1)
lines(1:101,apply(Flatfish_Depl,2,quantile,probs=0.025),lty=2)
View(Flatfish_runs)
